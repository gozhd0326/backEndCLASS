	Browser	User									Server(BackEnd)
	App	(무엇이던 인터넷에 보낸다 
		=>data packet)
		(까서 헤더를 확인(수신자,어떤종류의 패킷인지)
		(헤더에 최종으로 가야될 주소를 적음(수신자))
		(먼저 받은 서버는 다음으로 가야할 서버를 알고 있음
		(다시 헤더를 붙인다(그 다음 서버주소))
		(그 이후 받은 서버가 자신에게 온 것이 맞으면 주소를
		 떼고 다음 서버 주소를 붙임) : 로드밸런싱서버
		(전달하려는 서버가 트래픽이 심하면 다른서버로 우회)
		게이트웨이서버 : 방화벽 역할 
		(특정 국가의 서버에서 전송하는 것이 막혔다면 VPN등을 이용하여 우회하기도 함)

		(로컬호스트 : 우리의 컴퓨터(로컬)에서만 존재함)
		=>(그렇기 때문에 라우터에서 특별한 설정을해서 게이트웨이를 이용)
		Servlet (스프링(서버)에서 유저와 통신할 수 있도록 도와줌) 
		(서블렛를 관리하는 애가 아파치 톰캣(톰캣:웹서버)) => 정적인 서버
		( 정적인 서버 : 계산하는 과정이 없고 요청을 분석해서 그에 맞는 페이지를 전송(요리를 줌)) WS
		( 동적인 서버 : 페이지를 주는 것이 아닌 정보를 줌(정보를 줄테니 네가 알아서 해(재료를 줌))) WAS(Web Application Server)
		(모바일환경에서 쓰임! 웹브라우저가 아니라 어플리케이션!(앱이 있으면 광고를 푸시할 수 있기 때문)
		(우리가 만든 컨트롤러는 일종의 아파치라고 볼 수 있음)
	