* 데이터의 흐름 *

1. Controller 계층에서 사용자의 요청을 받아 DTO로 변환합니다.
2. 변환된 DTO는 Service 계층으로 전달되어 비즈니스 로직을 수행합니다.
3. Service 계층에서는 필요한 데이터를 Repository 계층에 요청하여 Entity를 받아옵니다.
4. Service 계층에서는 받아온 Entity를 다시 DTO로 변환하여 Controller 계층으로 전달합니다.
5. Controller 계층에서는 DTO를 사용자에게 응답으로 전달합니다.

- 보통 DTO는 Service 계층에서 생성하고 사용함.
- Repository 계층은 데이터베이스와 직접적으로 연결되어 있어 Entity 객체를 다룸.
- Entity는 데이터베이스의 테이블과 1:1로 매핑되는 객체로, 데이터베이스의 스키마를 그대로 반영함.
- DTO는 Service 계층이나 Controller 계층에서 사용되며,
 사용자의 요청이나 응답에 필요한 데이터만을 담아서 전달하는 역할을 함.


=> 이렇게 하면, 각 계층은 자신에게 필요한 데이터만을 다루게 되어 코드의 유지 보수가 쉬워짐.
 또한, 각 계층간의 결합도를 낮추어 코드의 유연성을 높일 수 있음.
