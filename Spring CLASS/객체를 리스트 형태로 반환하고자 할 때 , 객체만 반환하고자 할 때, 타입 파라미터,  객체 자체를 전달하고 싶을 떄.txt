
1. ResponseDto<List<LectureCart>>와 ResponseDto<LectureCart>의 차이:

 -  ResponseDto<List<LectureCart>>는 여러 개의 LectureCart 객체를 리스트 형태로 반환하고자 할 때 사용합니다.
 예를 들어, 사용자의 장바구니에 담긴 모든 아이템을 조회하는 API에서는 이 형태를 사용할 수 있습니다.

 - 반면에 ResponseDto<LectureCart>는 하나의 LectureCart 객체만 반환하고자 할 때 사용합니다.
 예를 들어, 특정 ID를 가진 장바구니 아이템을 조회하는 API에서는 이 형태를 사용할 수 있습니다.


2. "타입 파라미터로 사용되는 클래스의 인스턴스를 데이터로 전달하도록 설계되어 있을 것입니다."
라는 말은 ResponseDto<T>에서 T는 ResponseDto에 전달할 데이터의 타입을 의미합니다. 

 - ex ) ResponseDto<LectureCart>에서 T는 LectureCart이므로 LectureCart의 인스턴스를 데이터로 전달해야 합니다.


3. 객체 자체를 전달하고 싶다면 새로운 DTO 클래스를 만드는 이유:

 - 한번에 여러 개의 데이터를 전달하고 싶을 때는 그 데이터들을 하나의 클래스로 묶어서 전달하는 것이 편리합니다.
 이를 위해 새로운 DTO 클래스를 만들 수 있습니다.

- 예를 들어, LectureCart와 그 LectureCart의 ID를 함께 전달하고 싶다면, 이 두 데이터를 담을 수 있는 새로운 클래스를 만들어서 사용할 수 있습니다.

