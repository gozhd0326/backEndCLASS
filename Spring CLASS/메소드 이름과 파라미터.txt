- Service의 메소드 이름들은 메소드 이름의 일관성과 가독성에 관한 문제로,
 JPA의 동작에는 영향을 미치지 않기 때문에 
 개인의 코딩 스타일과 프로젝트의 코딩 컨벤션에 따라 달라질 수 있습니다. 
 단, 어떤 선택을 하더라도 일관성을 유지하는 것이 중요합니다.

- ex ) 'SentMessageBinId'를 사용하는 것이 좋은 이유는 이 메소드가 작업을 수행하는 데
 필요한 ID가 바로 'SentMessageBin'의 ID라는 것을 명확하게 표현해주기 때문입니다.
 이는 코드를 읽는 사람이 해당 메소드의 동작을 이해하는 데 도움이 됩니다.
그러나 'SentMessageBinId'를 'id'로 바꾸는 것이 코드를 간결하게 만들어 줄 수는 있습니다.
 'getSentMessageBinById', 'restoreSentMessageBinById', 'deleteSentMessageBinById'와 같이
 메소드 이름을 간단하게 만들어 주는 효과가 있습니다.

- JPA와 관련된 부분( repository는 extends로 JPA와 연결되어 있음 )으로는,
 JPA는 메소드 이름으로 쿼리를 생성하기 때문에 메소드 이름이 중요합니다.(repository에서는 중요함) 


- Controller와 Service의 메서드 파라미터 이름이 반드시 같아야 하는 것은 아닙니다.
 이 둘은 서로 다른 레이어에서 작동하고, 각각의 메서드는 자신의 역할에 맞춰 독립적으로 동작하기 때문입니다.

- 그러나 메서드 파라미터의 이름을 일관되게 유지하는 것은 좋은 코딩 습관입니다. 
 이는 코드의 가독성과 유지보수성을 높이는 데 도움이 됩니다.
 특히 같은 개념을 나타내는 파라미터에 대해 동일한 이름을 사용하는 것은 중요합니다.

- ex )  Controller 레이어에서 'sentMessageBinId'라는 이름을 사용하고 있다면,
 Service 레이어에서도 'sentMessageBinId'라는 이름을 사용하는 것이 좋습니다. 
이렇게 하면 두 레이어 간에 데이터를 전달하는 과정에서 혼동이 덜 발생합니다.