package hj.securityproject.member.dto;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;

import hj.securityproject.common.status.Gender;
import jakarta.validation.constraints.NotBlank;

//정규식 표현(Regular Expression)은 문자열만 인식할 수 있음.
//때문에 String형으로 바꿈
//Entity와 다르기 때문에 따로 만들어야 됨.

public class MemberDto {

	private Long id;

	@NotBlank
	private String loginId; //아이디에 준하는 유니크한 키를 지정해야됨. 중복은 허용하지 않음!!
	
	private String password;
	
	private String name;

	private String birthDate; //날짜를 입력받는 애
	

	private String gender;
	

	private String email;


	public MemberDto() {
		super();
	}

	public MemberDto(Long id, String loginId, String password, String name, String birthDate, String gender,
			String email) {
		super();
		this.id = id;
		this.loginId = loginId;
		this.password = password;
		this.name = name;
		this.birthDate = birthDate;
		this.gender = gender;
		this.email = email;
	}

//DTO를 Entity로 변환

	public Long getId() {
		return id;
	}


	public void setId(Long id) {
		this.id = id;
	}


	public String getLoginId() {
		return loginId;
	}


	public void setLoginId(String loginId) {
		this.loginId = loginId;
	}


	public String getPassword() {
		return password;
	}


	public void setPassword(String password) {
		this.password = password;
	}


	public String getName() {
		return name;
	}


	public void setName(String name) {
		this.name = name;
	}


	public LocalDate getBirthDate() {
		return LocalDate.parse(birthDate, //LocalDate로 변환시키는 코드
				DateTimeFormatter.ofPattern("yyyy-MM-dd"));
	}


	public void setBirthDate(String birthDate) {
		this.birthDate = birthDate;
	}


	public Gender getGender() { //Enum형식의 코드로 변경
		return Gender.valueOf(gender); //문자열타입의 gender를 gender타입으로 변경
	}


	public void setGender(String gender) {
		this.gender = gender;
	}


	public String getEmail() {
		return email;
	}


	public void setEmail(String email) {
		this.email = email;
	}


}
